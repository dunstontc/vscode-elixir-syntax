{
  "repository": {
    "variable": {
      "patterns": [
        {
          // "name": "meta.params.elixir",
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": {"0": {"name": "punctuation.section.function.elixir"}},
          "endCaptures": {"0": {"name": "punctuation.section.function.elixir"}},
          "patterns": [
            {"include": "$self"},
            {
              "name": "variable.other.param.elixir",
              "match": "[a-zA-Z]([a-zA-Z0-9_]+)?",
            },
          ],
        },
        {
          "name": "variable.other.access.elixir",
          "match": "([a-zA-Z_][a-zA-Z0-9_]+)(?=\\[)",
        },
        {
          "name": "variable.other.readwrite.module.elixir",
          "match": "(@)[a-zA-Z_]\\w*",
          "captures": {"1": {"name": "punctuation.definition.variable.elixir"}},
        },
        {
          "name": "variable.other.elixir",
          "match": "[a-zA-Z_]\\w+(?=:)",
        },
        {
          "name": "variable.other.elixir",
          "match": "[a-zA-Z_]\\w+(?=\\s=)",
        },
        {
          "name": "variable.other.anonymous.elixir",
          "match": "(&)\\d*",
          "captures": {"1": {"name": "punctuation.definition.variable.elixir"}},
        },
        {
          "name": "variable.language.elixir",
          "match": "\\b(__(CALLER|ENV|MODULE|DIR)__)\\b(?![?!])",
        },
        {
          "match": "(%)?\\b([A-Z]\\w+)\\b",
          "captures": {
            "1": {"name": "variable.other.constant.elixir"},
            "2": {"name": "variable.other.constant.elixir"},
          },
        },
      ]
    }
  }
}
